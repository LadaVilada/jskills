<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
	<changeSet id="level_data" author="Sergey Torgovtsev"
		context="dev">
		<insert tableName="level_">
			<column name="id">1</column>
			<column name="description">Doesn't know the difference between Array and
				LinkedList</column>
			<column name="level_type">1</column>
			<column name="competences_id">2</column>
		</insert>
		<insert tableName="level_">
			<column name="id">2</column>
			<column name="description">Unable to find the average of numbers in an array
				(It's hard to believe but I've interviewed such candidates)</column>
			<column name="level_type">1</column>
			<column name="competences_id">3</column>
		</insert>
		<insert tableName="level_">
			<column name="id">3</column>
			<column name="description">Doesn't know what a compiler, linker or
				interpreter is</column>
			<column name="level_type">1</column>
			<column name="competences_id">4</column>
		</insert>
		<insert tableName="level_">
			<column name="id">4</column>
			<column name="description">Folder backups by date</column>
			<column name="level_type">1</column>
			<column name="competences_id">6</column>
		</insert>
		<insert tableName="level_">
			<column name="id">5</column>
			<column name="description">Only knows how to build from IDE</column>
			<column name="level_type">1</column>
			<column name="competences_id">7</column>
		</insert>
		<insert tableName="level_">
			<column name="id">6</column>
			<column name="description">Thinks that all testing is the job of the tester
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">8</column>
		</insert>
		<insert tableName="level_">
			<column name="id">7</column>
			<column name="description">Only straight line code with copy paste for reuse
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">10</column>
		</insert>
		<insert tableName="level_">
			<column name="id">8</column>
			<column name="description">Not able to think above the level of a single
				file/class</column>
			<column name="level_type">1</column>
			<column name="competences_id">11</column>
		</insert>
		<insert tableName="level_">
			<column name="id">9</column>
			<column name="description">Cannot express thoughts/ideas to peers. Poor
				spelling and grammar.</column>
			<column name="level_type">1</column>
			<column name="competences_id">12</column>
		</insert>
		<insert tableName="level_">
			<column name="id">10</column>
			<column name="description">no evidence of organization within a file
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">13</column>
		</insert>
		<insert tableName="level_">
			<column name="id">11</column>
			<column name="description">No thought given to organizing code across files
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">14</column>
		</insert>
		<insert tableName="level_">
			<column name="id">12</column>
			<column name="description">Everything in one folder</column>
			<column name="level_type">1</column>
			<column name="competences_id">15</column>
		</insert>
		<insert tableName="level_">
			<column name="id">13</column>
			<column name="description">Mono-syllable names</column>
			<column name="level_type">1</column>
			<column name="competences_id">16</column>
		</insert>
		<insert tableName="level_">
			<column name="id">14</column>
			<column name="description">Doesn't understand the concept</column>
			<column name="level_type">1</column>
			<column name="competences_id">17</column>
		</insert>
		<insert tableName="level_">
			<column name="id">15</column>
			<column name="description">Only codes the happy case</column>
			<column name="level_type">1</column>
			<column name="competences_id">18</column>
		</insert>
		<insert tableName="level_">
			<column name="id">16</column>
			<column name="description">Mostly uses IDE for text editing</column>
			<column name="level_type">1</column>
			<column name="competences_id">19</column>
		</insert>
		<insert tableName="level_">
			<column name="id">17</column>
			<column name="description">Needs to look up the documentation frequently
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">20</column>
		</insert>
		<insert tableName="level_">
			<column name="id">18</column>
			<column name="description">Has not used any framework outside of the core
				platform</column>
			<column name="level_type">1</column>
			<column name="competences_id">21</column>
		</insert>
		<insert tableName="level_">
			<column name="id">19</column>
			<column name="description">Takes the given requirements and codes to spec
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">22</column>
		</insert>
		<insert tableName="level_">
			<column name="id">20</column>
			<column name="description">No knowledge of scripting tools</column>
			<column name="level_type">1</column>
			<column name="competences_id">23</column>
		</insert>
		<insert tableName="level_">
			<column name="id">21</column>
			<column name="description">Thinks that Excel is a database</column>
			<column name="level_type">1</column>
			<column name="competences_id">24</column>
		</insert>
		<insert tableName="level_">
			<column name="id">22</column>
			<column name="description">Imperative or Object Oriented</column>
			<column name="level_type">1</column>
			<column name="competences_id">26</column>
		</insert>
		<insert tableName="level_">
			<column name="id">23</column>
			<column name="description">1</column>
			<column name="level_type">1</column>
			<column name="competences_id">27</column>
		</insert>
		<insert tableName="level_">
			<column name="id">24</column>
			<column name="description">1</column>
			<column name="level_type">1</column>
			<column name="competences_id">28</column>
		</insert>
		<insert tableName="level_">
			<column name="id">25</column>
			<column name="description">No knowledge of the domain</column>
			<column name="level_type">1</column>
			<column name="competences_id">29</column>
		</insert>
		<insert tableName="level_">
			<column name="id">26</column>
			<column name="description">Limited to primary IDE (VS.Net, Eclipse etc.)
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">31</column>
		</insert>
		<insert tableName="level_">
			<column name="id">27</column>
			<column name="description">Imperative or Object Oriented</column>
			<column name="level_type">1</column>
			<column name="competences_id">32</column>
		</insert>
		<insert tableName="level_">
			<column name="id">28</column>
			<column name="description">Has never looked at the codebase</column>
			<column name="level_type">1</column>
			<column name="competences_id">33</column>
		</insert>
		<insert tableName="level_">
			<column name="id">29</column>
			<column name="description">Has not heard of the upcoming technologies
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">34</column>
		</insert>
		<insert tableName="level_">
			<column name="id">30</column>
			<column name="description">Zero knowledge of platform internals</column>
			<column name="level_type">1</column>
			<column name="competences_id">35</column>
		</insert>
		<insert tableName="level_">
			<column name="id">31</column>
			<column name="description">Unleashed series, 21 days series, 24 hour series,
				dummies series...</column>
			<column name="level_type">1</column>
			<column name="competences_id">36</column>
		</insert>
		<insert tableName="level_">
			<column name="id">32</column>
			<column name="description">Has heard of them but never got the time.
			</column>
			<column name="level_type">1</column>
			<column name="competences_id">37</column>
		</insert>
		<insert tableName="level_">
			<column name="id">33</column>
			<column name="description">Able to explain and use Arrays, LinkedLists,
				Dictionaries etc in practical programming tasks</column>
			<column name="level_type">2</column>
			<column name="competences_id">2</column>
		</insert>
		<insert tableName="level_">
			<column name="id">34</column>
			<column name="description">Basic sorting, searching and data structure
				traversal and retrieval algorithms</column>
			<column name="level_type">2</column>
			<column name="competences_id">3</column>
		</insert>
		<insert tableName="level_">
			<column name="id">35</column>
			<column name="description">Basic understanding of compilers, linker and
				interpreters. Understands what assembly code is and how things work
				at the hardware level. Some knowledge of virtual memory and paging.
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">4</column>
		</insert>
		<insert tableName="level_">
			<column name="id">36</column>
			<column name="description">VSS and beginning CVS/SVN user</column>
			<column name="level_type">2</column>
			<column name="competences_id">6</column>
		</insert>
		<insert tableName="level_">
			<column name="id">37</column>
			<column name="description">Knows how to build the system from the command
				line</column>
			<column name="level_type">2</column>
			<column name="competences_id">7</column>
		</insert>
		<insert tableName="level_">
			<column name="id">38</column>
			<column name="description">Has written automated unit tests and comes up
				with good unit test cases for the code that is being written
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">8</column>
		</insert>
		<insert tableName="level_">
			<column name="id">39</column>
			<column name="description">Able to break up problem into multiple functions
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">10</column>
		</insert>
		<insert tableName="level_">
			<column name="id">40</column>
			<column name="description">Able to break up problem space and design
				solution as long as it is within the same platform/technology
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">11</column>
		</insert>
		<insert tableName="level_">
			<column name="id">41</column>
			<column name="description">Peers can understand what is being said. Good
				spelling and grammar.</column>
			<column name="level_type">2</column>
			<column name="competences_id">12</column>
		</insert>
		<insert tableName="level_">
			<column name="id">42</column>
			<column name="description">Methods are grouped logically or by accessibility
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">13</column>
		</insert>
		<insert tableName="level_">
			<column name="id">43</column>
			<column name="description">Related files are grouped into a folder</column>
			<column name="level_type">2</column>
			<column name="competences_id">14</column>
		</insert>
		<insert tableName="level_">
			<column name="id">44</column>
			<column name="description">Basic separation of code into logical folders.
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">15</column>
		</insert>
		<insert tableName="level_">
			<column name="id">45</column>
			<column name="description">Good names for files, variables classes, methods
				etc.</column>
			<column name="level_type">2</column>
			<column name="competences_id">16</column>
		</insert>
		<insert tableName="level_">
			<column name="id">46</column>
			<column name="description">Checks all arguments and asserts critical
				assumptions in code</column>
			<column name="level_type">2</column>
			<column name="competences_id">17</column>
		</insert>
		<insert tableName="level_">
			<column name="id">47</column>
			<column name="description">Basic error handling around code that can throw
				exceptions/generate errors</column>
			<column name="level_type">2</column>
			<column name="competences_id">18</column>
		</insert>
		<insert tableName="level_">
			<column name="id">48</column>
			<column name="description">Knows their way around the interface, able to
				effectively use the IDE using menus.</column>
			<column name="level_type">2</column>
			<column name="competences_id">19</column>
		</insert>
		<insert tableName="level_">
			<column name="id">49</column>
			<column name="description">Has the most frequently used APIs in memory
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">20</column>
		</insert>
		<insert tableName="level_">
			<column name="id">50</column>
			<column name="description">Has heard about but not used the popular
				frameworks available for the platform.</column>
			<column name="level_type">2</column>
			<column name="competences_id">21</column>
		</insert>
		<insert tableName="level_">
			<column name="id">51</column>
			<column name="description">Come up with questions regarding missed cases in
				the spec</column>
			<column name="level_type">2</column>
			<column name="competences_id">22</column>
		</insert>
		<insert tableName="level_">
			<column name="id">52</column>
			<column name="description">Batch files/shell scripts</column>
			<column name="level_type">2</column>
			<column name="competences_id">23</column>
		</insert>
		<insert tableName="level_">
			<column name="id">53</column>
			<column name="description">Knows basic database concepts, normalization,
				ACID, transactions and can write simple selects</column>
			<column name="level_type">2</column>
			<column name="competences_id">24</column>
		</insert>
		<insert tableName="level_">
			<column name="id">54</column>
			<column name="description">Imperative, Object-Oriented and declarative
				(SQL), added bonus if they understand static vs dynamic typing, weak
				vs strong typing and static inferred types</column>
			<column name="level_type">2</column>
			<column name="competences_id">26</column>
		</insert>
		<insert tableName="level_">
			<column name="id">55</column>
			<column name="description">2-3</column>
			<column name="level_type">2</column>
			<column name="competences_id">27</column>
		</insert>
		<insert tableName="level_">
			<column name="id">56</column>
			<column name="description">2-5</column>
			<column name="level_type">2</column>
			<column name="competences_id">28</column>
		</insert>
		<insert tableName="level_">
			<column name="id">57</column>
			<column name="description">Has worked on at least one product in the domain.
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">29</column>
		</insert>
		<insert tableName="level_">
			<column name="id">58</column>
			<column name="description">Knows about some alternatives to popular and
				standard tools.</column>
			<column name="level_type">2</column>
			<column name="competences_id">31</column>
		</insert>
		<insert tableName="level_">
			<column name="id">59</column>
			<column name="description">Imperative, Object-Oriented and declarative
				(SQL), added bonus if they understand static vs dynamic typing, weak
				vs strong typing and static inferred types</column>
			<column name="level_type">2</column>
			<column name="competences_id">32</column>
		</insert>
		<insert tableName="level_">
			<column name="id">60</column>
			<column name="description">Basic knowledge of the code layout and how to
				build the system</column>
			<column name="level_type">2</column>
			<column name="competences_id">33</column>
		</insert>
		<insert tableName="level_">
			<column name="id">61</column>
			<column name="description">Has heard of upcoming technologies in the field
			</column>
			<column name="level_type">2</column>
			<column name="competences_id">34</column>
		</insert>
		<insert tableName="level_">
			<column name="id">62</column>
			<column name="description">Has basic knowledge of how the platform works
				internally</column>
			<column name="level_type">2</column>
			<column name="competences_id">35</column>
		</insert>
		<insert tableName="level_">
			<column name="id">63</column>
			<column name="description">Code Complete, Don't Make me Think, Mastering
				Regular Expressions</column>
			<column name="level_type">2</column>
			<column name="competences_id">36</column>
		</insert>
		<insert tableName="level_">
			<column name="id">64</column>
			<column name="description">Reads tech/programming/software engineering blogs
				and listens to podcasts regularly.</column>
			<column name="level_type">2</column>
			<column name="competences_id">37</column>
		</insert>
		<insert tableName="level_">
			<column name="id">65</column>
			<column name="description">Knows space and time tradeoffs of the basic data
				structures, Arrays vs LinkedLists, Able to explain how hashtables
				can be implemented and can handle collisions, Priority queues and
				ways to implement them etc.</column>
			<column name="level_type">3</column>
			<column name="competences_id">2</column>
		</insert>
		<insert tableName="level_">
			<column name="id">66</column>
			<column name="description">Tree, Graph, simple greedy and divide and conquer
				algorithms, is able to understand the relevance of the levels of
				this matrix.</column>
			<column name="level_type">3</column>
			<column name="competences_id">3</column>
		</insert>
		<insert tableName="level_">
			<column name="id">67</column>
			<column name="description">Understands kernel mode vs. user mode,
				multi-threading, synchronization primitives and how they're
				implemented, able to read assembly code. Understands how networks
				work, understanding of network protocols and socket level
				programming.</column>
			<column name="level_type">3</column>
			<column name="competences_id">4</column>
		</insert>
		<insert tableName="level_">
			<column name="id">68</column>
			<column name="description">Proficient in using CVS and SVN features. Knows
				how to branch and merge, use patches setup repository properties
				etc.</column>
			<column name="level_type">3</column>
			<column name="competences_id">6</column>
		</insert>
		<insert tableName="level_">
			<column name="id">69</column>
			<column name="description">Can setup a script to build the basic system
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">7</column>
		</insert>
		<insert tableName="level_">
			<column name="id">70</column>
			<column name="description">Has written code in TDD manner</column>
			<column name="level_type">3</column>
			<column name="competences_id">8</column>
		</insert>
		<insert tableName="level_">
			<column name="id">71</column>
			<column name="description">Able to come up with reusable functions/objects
				that solve the overall problem</column>
			<column name="level_type">3</column>
			<column name="competences_id">10</column>
		</insert>
		<insert tableName="level_">
			<column name="id">72</column>
			<column name="description">Able to design systems that span multiple
				technologies/platforms.</column>
			<column name="level_type">3</column>
			<column name="competences_id">11</column>
		</insert>
		<insert tableName="level_">
			<column name="id">73</column>
			<column name="description">Is able to effectively communicate with peers
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">12</column>
		</insert>
		<insert tableName="level_">
			<column name="id">74</column>
			<column name="description">Code is grouped into regions and well commented
				with references to other source files</column>
			<column name="level_type">3</column>
			<column name="competences_id">13</column>
		</insert>
		<insert tableName="level_">
			<column name="id">75</column>
			<column name="description">Each physical file has a unique purpose, for e.g.
				one class definition, one feature implementation etc.</column>
			<column name="level_type">3</column>
			<column name="competences_id">14</column>
		</insert>
		<insert tableName="level_">
			<column name="id">76</column>
			<column name="description">No circular dependencies, binaries, libs, docs,
				builds, third-party code all organized into appropriate folders
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">15</column>
		</insert>
		<insert tableName="level_">
			<column name="id">77</column>
			<column name="description">No long functions, comments explaining unusual
				code, bug fixes, code assumptions</column>
			<column name="level_type">3</column>
			<column name="competences_id">16</column>
		</insert>
		<insert tableName="level_">
			<column name="id">78</column>
			<column name="description">Makes sure to check return values and check for
				exceptions around code that can fail.</column>
			<column name="level_type">3</column>
			<column name="competences_id">17</column>
		</insert>
		<insert tableName="level_">
			<column name="id">79</column>
			<column name="description">Ensures that error/exceptions leave program in
				good state, resources, connections and memory is all cleaned up
				properly</column>
			<column name="level_type">3</column>
			<column name="competences_id">18</column>
		</insert>
		<insert tableName="level_">
			<column name="id">80</column>
			<column name="description">Knows keyboard shortcuts for most used
				operations.</column>
			<column name="level_type">3</column>
			<column name="competences_id">19</column>
		</insert>
		<insert tableName="level_">
			<column name="id">81</column>
			<column name="description">Vast and In-depth knowledge of the API</column>
			<column name="level_type">3</column>
			<column name="competences_id">20</column>
		</insert>
		<insert tableName="level_">
			<column name="id">82</column>
			<column name="description">Has used more than one framework in a
				professional capacity and is well-versed with the idioms of the
				frameworks.</column>
			<column name="level_type">3</column>
			<column name="competences_id">21</column>
		</insert>
		<insert tableName="level_">
			<column name="id">83</column>
			<column name="description">Understand complete picture and come up with
				entire areas that need to be speced</column>
			<column name="level_type">3</column>
			<column name="competences_id">22</column>
		</insert>
		<insert tableName="level_">
			<column name="id">84</column>
			<column name="description">Perl/Python/Ruby/VBScript/Powershell</column>
			<column name="level_type">3</column>
			<column name="competences_id">23</column>
		</insert>
		<insert tableName="level_">
			<column name="id">85</column>
			<column name="description">Able to design good and normalized database
				schemas keeping in mind the queries that'll have to be run,
				proficient in use of views, stored procedures, triggers and user
				defined types. Knows difference between clustered and non-clustered
				indexes. Proficient in use of ORM tools.</column>
			<column name="level_type">3</column>
			<column name="competences_id">24</column>
		</insert>
		<insert tableName="level_">
			<column name="id">86</column>
			<column name="description">Functional, added bonus if they understand lazy
				evaluation, currying, continuations</column>
			<column name="level_type">3</column>
			<column name="competences_id">26</column>
		</insert>
		<insert tableName="level_">
			<column name="id">87</column>
			<column name="description">4-5</column>
			<column name="level_type">3</column>
			<column name="competences_id">27</column>
		</insert>
		<insert tableName="level_">
			<column name="id">88</column>
			<column name="description">6-9</column>
			<column name="level_type">3</column>
			<column name="competences_id">28</column>
		</insert>
		<insert tableName="level_">
			<column name="id">89</column>
			<column name="description">Has worked on multiple products in the same
				domain.</column>
			<column name="level_type">3</column>
			<column name="competences_id">29</column>
		</insert>
		<insert tableName="level_">
			<column name="id">90</column>
			<column name="description">Good knowledge of editors, debuggers, IDEs, open
				source alternatives etc. etc. For e.g. someone who knows most of the
				tools from Scott Hanselman's power tools list. Has used ORM tools.
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">31</column>
		</insert>
		<insert tableName="level_">
			<column name="id">91</column>
			<column name="description">Functional, added bonus if they understand lazy
				evaluation, currying, continuations</column>
			<column name="level_type">3</column>
			<column name="competences_id">32</column>
		</insert>
		<insert tableName="level_">
			<column name="id">92</column>
			<column name="description">Good working knowledge of code base, has
				implemented several bug fixes and maybe some small features.
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">33</column>
		</insert>
		<insert tableName="level_">
			<column name="id">93</column>
			<column name="description">Has downloaded the alpha preview/CTP/beta and
				read some articles/manuals</column>
			<column name="level_type">3</column>
			<column name="competences_id">34</column>
		</insert>
		<insert tableName="level_">
			<column name="id">94</column>
			<column name="description">Deep knowledge of platform internals and can
				visualize how the platform takes the program and converts it into
				executable code.</column>
			<column name="level_type">3</column>
			<column name="competences_id">35</column>
		</insert>
		<insert tableName="level_">
			<column name="id">95</column>
			<column name="description">Design Patterns, Peopleware, Programming Pearls,
				Algorithm Design Manual, Pragmatic Programmer, Mythical Man month
			</column>
			<column name="level_type">3</column>
			<column name="competences_id">36</column>
		</insert>
		<insert tableName="level_">
			<column name="id">96</column>
			<column name="description">Maintains a link blog with some collection of
				useful articles and tools that he/she has collected</column>
			<column name="level_type">3</column>
			<column name="competences_id">37</column>
		</insert>
		<insert tableName="level_">
			<column name="id">97</column>
			<column name="description">Knowledge of advanced data structures like
				B-trees, binomial and fibonacci heaps, AVL/Red Black trees, Splay
				Trees, Skip Lists, tries etc.</column>
			<column name="level_type">4</column>
			<column name="competences_id">2</column>
		</insert>
		<insert tableName="level_">
			<column name="id">98</column>
			<column name="description">Able to recognize and code dynamic programming
				solutions, good knowledge of graph algorithms, good knowledge of
				numerical computation algorithms, able to identify NP problems etc.
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">3</column>
		</insert>
		<insert tableName="level_">
			<column name="id">99</column>
			<column name="description">Understands the entire programming stack,
				hardware (CPU + Memory + Cache + Interrupts + microcode), binary
				code, assembly, static and dynamic linking, compilation,
				interpretation, JIT compilation, garbage collection, heap, stack,
				memory addressing...</column>
			<column name="level_type">4</column>
			<column name="competences_id">4</column>
		</insert>
		<insert tableName="level_">
			<column name="id">100</column>
			<column name="description">Knowledge of distributed VCS systems. Has tried
				out Bzr/Mercurial/Darcs/Git</column>
			<column name="level_type">4</column>
			<column name="competences_id">6</column>
		</insert>
		<insert tableName="level_">
			<column name="id">101</column>
			<column name="description">Can setup a script to build the system and also
				documentation, installers, generate release notes and tag the code
				in source control</column>
			<column name="level_type">4</column>
			<column name="competences_id">7</column>
		</insert>
		<insert tableName="level_">
			<column name="id">102</column>
			<column name="description">Understands and is able to setup automated
				functional, load/performance and UI tests</column>
			<column name="level_type">4</column>
			<column name="competences_id">8</column>
		</insert>
		<insert tableName="level_">
			<column name="id">103</column>
			<column name="description">Use of appropriate data structures and algorithms
				and comes up with generic/object-oriented code that encapsulate
				aspects of the problem that are subject to change.</column>
			<column name="level_type">4</column>
			<column name="competences_id">10</column>
		</insert>
		<insert tableName="level_">
			<column name="id">104</column>
			<column name="description">Able to visualize and design complex systems with
				multiple product lines and integrations with external systems. Also
				should be able to design operations support systems like monitoring,
				reporting, fail overs etc.</column>
			<column name="level_type">4</column>
			<column name="competences_id">11</column>
		</insert>
		<insert tableName="level_">
			<column name="id">105</column>
			<column name="description">Able to understand and communicate
				thoughts/design/ideas/specs in a unambiguous manner and adjusts
				communication as per the context</column>
			<column name="level_type">4</column>
			<column name="competences_id">12</column>
		</insert>
		<insert tableName="level_">
			<column name="id">106</column>
			<column name="description">File has license header, summary, well commented,
				consistent white space usage. The file should look beautiful.
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">13</column>
		</insert>
		<insert tableName="level_">
			<column name="id">107</column>
			<column name="description">Code organization at a physical level closely
				matches design and looking at file names and folder distribution
				provides insights into design</column>
			<column name="level_type">4</column>
			<column name="competences_id">14</column>
		</insert>
		<insert tableName="level_">
			<column name="id">108</column>
			<column name="description">Physical layout of source tree matches logical
				hierarchy and organization. The directory names and organization
				provide insights into the design of the system.</column>
			<column name="level_type">4</column>
			<column name="competences_id">15</column>
		</insert>
		<insert tableName="level_">
			<column name="id">109</column>
			<column name="description">Code assumptions are verified using asserts, code
				flows naturally - no deep nesting of conditionals or methods
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">16</column>
		</insert>
		<insert tableName="level_">
			<column name="id">110</column>
			<column name="description">Has his own library to help with defensive
				coding, writes unit tests that simulate faults</column>
			<column name="level_type">4</column>
			<column name="competences_id">17</column>
		</insert>
		<insert tableName="level_">
			<column name="id">111</column>
			<column name="description">Codes to detect possible exception before,
				maintain consistent exception handling strategy in all layers of
				code, come up with guidelines on exception handling for entire
				system.</column>
			<column name="level_type">4</column>
			<column name="competences_id">18</column>
		</insert>
		<insert tableName="level_">
			<column name="id">112</column>
			<column name="description">Has written custom macros</column>
			<column name="level_type">4</column>
			<column name="competences_id">19</column>
		</insert>
		<insert tableName="level_">
			<column name="id">113</column>
			<column name="description">Has written libraries that sit on top of the API
				to simplify frequently used tasks and to fill in gaps in the API
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">20</column>
		</insert>
		<insert tableName="level_">
			<column name="id">114</column>
			<column name="description">Author of framework</column>
			<column name="level_type">4</column>
			<column name="competences_id">21</column>
		</insert>
		<insert tableName="level_">
			<column name="id">115</column>
			<column name="description">Able to suggest better alternatives and flows to
				given requirements based on experience</column>
			<column name="level_type">4</column>
			<column name="competences_id">22</column>
		</insert>
		<insert tableName="level_">
			<column name="id">116</column>
			<column name="description">Has written and published reusable code</column>
			<column name="level_type">4</column>
			<column name="competences_id">23</column>
		</insert>
		<insert tableName="level_">
			<column name="id">117</column>
			<column name="description">Can do basic database administration, performance
				optimization, index optimization, write advanced select queries,
				able to replace cursor usage with relational sql, understands how
				data is stored internally, understands how indexes are stored
				internally, understands how databases can be mirrored, replicated
				etc. Understands how the two phase commit works.</column>
			<column name="level_type">4</column>
			<column name="competences_id">24</column>
		</insert>
		<insert tableName="level_">
			<column name="id">118</column>
			<column name="description">Concurrent (Erlang, Oz) and Logic (Prolog)
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">26</column>
		</insert>
		<insert tableName="level_">
			<column name="id">119</column>
			<column name="description">6+</column>
			<column name="level_type">4</column>
			<column name="competences_id">27</column>
		</insert>
		<insert tableName="level_">
			<column name="id">120</column>
			<column name="description">10+</column>
			<column name="level_type">4</column>
			<column name="competences_id">28</column>
		</insert>
		<insert tableName="level_">
			<column name="id">121</column>
			<column name="description">Domain expert. Has designed and implemented
				several products/solutions in the domain. Well versed with standard
				terms, protocols used in the domain.</column>
			<column name="level_type">4</column>
			<column name="competences_id">29</column>
		</insert>
		<insert tableName="level_">
			<column name="id">122</column>
			<column name="description">Has actually written tools and scripts, added
				bonus if they've been published.</column>
			<column name="level_type">4</column>
			<column name="competences_id">31</column>
		</insert>
		<insert tableName="level_">
			<column name="id">123</column>
			<column name="description">Concurrent (Erlang, Oz) and Logic (Prolog)
			</column>
			<column name="level_type">4</column>
			<column name="competences_id">32</column>
		</insert>
		<insert tableName="level_">
			<column name="id">124</column>
			<column name="description">Has implemented multiple big features in the
				codebase and can easily visualize the changes required for most
				features or bug fixes.</column>
			<column name="level_type">4</column>
			<column name="competences_id">33</column>
		</insert>
		<insert tableName="level_">
			<column name="id">125</column>
			<column name="description">Has played with the previews and has actually
				built something with it and as a bonus shared that with everyone
				else</column>
			<column name="level_type">4</column>
			<column name="competences_id">34</column>
		</insert>
		<insert tableName="level_">
			<column name="id">126</column>
			<column name="description">Has written tools to enhance or provide
				information on platform internals. For e.g. disassemblers,
				decompilers, debuggers etc.</column>
			<column name="level_type">4</column>
			<column name="competences_id">35</column>
		</insert>
		<insert tableName="level_">
			<column name="id">127</column>
			<column name="description">Structure and Interpretation of Computer
				Programs, Concepts Techniques, Models of Computer Programming, Art
				of Computer Programming, Database systems , by C. J Date, Thinking
				Forth, Little Schemer</column>
			<column name="level_type">4</column>
			<column name="competences_id">36</column>
		</insert>
		<insert tableName="level_">
			<column name="id">128</column>
			<column name="description">Maintains a blog in which personal insights and
				thoughts on programming are shared</column>
			<column name="level_type">4</column>
			<column name="competences_id">37</column>
		</insert>

	</changeSet>
</databaseChangeLog>